<?php

//----------------------------------------------------------------------
//
//  Copyright (C) 2015-2017 Artem Rodygin
//
//  This file is part of Linode API Client Library for PHP.
//
//  You should have received a copy of the MIT License along with
//  the library. If not, see <http://opensource.org/licenses/MIT>.
//
//----------------------------------------------------------------------

namespace Linode;

/**
 * This class is autogenerated.
 *
 * @version Linode API v3.3
 */
class NodeBalancerApi extends BaseLinodeApi
{
    /**
     * @param int    $DatacenterID       [required] The DatacenterID from avail.datacenters() where you wish to place this new NodeBalancer
     * @param string $Label              [optional] This NodeBalancer's label
     * @param int    $ClientConnThrottle [optional] To help mitigate abuse, throttle connections per second, per client IP. 0 to disable. Max of 20.
     *
     * @return array
     */
    public function create($DatacenterID, $Label = null, $ClientConnThrottle = null)
    {
        return $this->call('nodebalancer.create', [
            'DatacenterID'       => $DatacenterID,
            'Label'              => $Label,
            'ClientConnThrottle' => $ClientConnThrottle,
        ]);
    }

    /**
     * Immediately removes a NodeBalancer from your account and issues a pro-rated credit back to your
     * account, if applicable.
     *
     * @param int $NodeBalancerID [required] The NodeBalancerID to delete
     *
     * @return array
     */
    public function delete($NodeBalancerID)
    {
        return $this->call('nodebalancer.delete', [
            'NodeBalancerID' => $NodeBalancerID,
        ]);
    }

    /**
     * Returns a list of NodeBalancers this user has access or delete to, including their properties.
     *
     * @param int $NodeBalancerID [optional] Limits the list to the specified NodeBalancerID
     *
     * @return array
     */
    public function getList($NodeBalancerID = null)
    {
        return $this->call('nodebalancer.list', [
            'NodeBalancerID' => $NodeBalancerID,
        ]);
    }

    /**
     * Updates a NodeBalancer's properties.
     *
     * @param int    $NodeBalancerID     [required]
     * @param string $Label              [optional] This NodeBalancer's label
     * @param int    $ClientConnThrottle [optional] To help mitigate abuse, throttle connections per second, per client IP. 0 to disable. Max of 20.
     *
     * @return array
     */
    public function update($NodeBalancerID, $Label = null, $ClientConnThrottle = null)
    {
        return $this->call('nodebalancer.update', [
            'NodeBalancerID'     => $NodeBalancerID,
            'Label'              => $Label,
            'ClientConnThrottle' => $ClientConnThrottle,
        ]);
    }
}
